%%% ./main.bib

@article{DLCompiler,
  title   = {The Deep Learning Compiler: A Comprehensive Survey},
  author  = {Mingzhen Li and Yi Liu and Xiaoyan Liu and Qingxiao Sun and Xin You and Hailong Yang and Zhongzhi Luan and Depei Qian},
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  year    = {2021},
  volume  = {32},
  pages   = {708-727}
}

@inproceedings{Paleo,
  title     = {Paleo: A Performance Model for Deep Neural Networks},
  author    = {Hang Qi and Evan R. Sparks and Ameet S. Talwalkar},
  booktitle = {ICLR},
  year      = {2017}
}

@inproceedings{LSTM1,
  title     = {Ithemal: Accurate, Portable and Fast Basic Block Throughput Estimation using Deep Neural Networks},
  author    = {Mendis, Charith and Renda, Alex and Amarasinghe, Dr.Saman and Carbin, Michael},
  booktitle = {Proceedings of the 36th International Conference on Machine Learning},
  pages     = {4505--4515},
  year      = {2019},
  editor    = {Chaudhuri, Kamalika and Salakhutdinov, Ruslan},
  volume    = {97},
  series    = {Proceedings of Machine Learning Research},
  month     = {09--15 Jun},
  publisher = {PMLR},
  pdf       = {http://proceedings.mlr.press/v97/mendis19a/mendis19a.pdf},
  url       = {https://proceedings.mlr.press/v97/mendis19a.html},
  abstract  = {Predicting the number of clock cycles a processor takes to execute a block of assembly instructions in steady state (the throughput) is important for both compiler designers and performance engineers. Building an analytical model to do so is especially complicated in modern x86-64 Complex Instruction Set Computer (CISC) machines with sophisticated processor microarchitectures in that it is tedious, error prone, and must be performed from scratch for each processor generation. In this paper we present Ithemal, the first tool which learns to predict the throughput of a set of instructions. Ithemal uses a hierarchical LSTM–based approach to predict throughput based on the opcodes and operands of instructions in a basic block. We show that Ithemal is more accurate than state-of-the-art hand-written tools currently used in compiler backends and static machine code analyzers. In particular, our model has less than half the error of state-of-the-art analytical models (LLVM’s llvm-mca and Intel’s IACA). Ithemal is also able to predict these throughput values just as fast as the aforementioned tools, and is easily ported across a variety of processor microarchitectures with minimal developer effort.}
}

@inproceedings{GraphSAGE,
  title     = {Inductive Representation Learning on Large Graphs},
  author    = {William L. Hamilton and Zhitao Ying and Jure Leskovec},
  booktitle = {NIPS},
  year      = {2017}
}

@inproceedings{Google,
  title     = {A Learned Performance Model for Tensor Processing Units},
  author    = {Samuel J. Kaufman and Phitchaya Mangpo Phothilimthana and Yanqi Zhou and Charith Mendis and Sudip Roy and Amit Sabne and Mike Burrows},
  booktitle = {MLSys},
  year      = {2021}
}